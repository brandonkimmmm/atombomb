swagger: "2.0"
info:
  version: "0.0.1"
  title: Hello World App
# during dev, should point to your local machine
host: localhost:10010
# basePath prefixes all resource paths
basePath: /

schemes:
  # tip: remove http to make production-grade
  - http
  - https
# format of bodies a client can send (Content-Type)
consumes:
  - application/json
# format of the responses to the client (Accepts)
produces:
  - application/json

securityDefinitions:
  Bearer:
    description: JWT authentication
    type: apiKey
    name: Authorization
    in: header

paths:
  /hello:
    # binds a127 app logic to a route
    x-swagger-router-controller: hello_world
    get:
      description: Returns 'Hello' to the caller
      # used as the method name of the controller
      operationId: hello
      parameters:
        - name: name
          in: query
          description: The name of the person to whom to say hello
          required: false
          type: string
      responses:
        200:
          description: Success
          schema:
            # a pointer to a definition
            $ref: "#/definitions/HelloWorldResponse"
        # responses may fall through to errors
        default:
          description: Error
          schema:
            $ref: "#/definitions/MessageResponse"
  /swagger:
    x-swagger-pipe: swagger_raw
  /login:
    x-swagger-router-controller: user
    post:
      description: User login
      operationId: loginUser
      parameters:
        - name: data
          in: body
          description: Login credentials
          required: true
          schema:
            type: object
            required:
              - email
              - password
            properties:
              email:
                type: string
              password:
                type: string
      responses:
        200:
          description: Success
          schema:
            type: object
            required:
              - token
            properties:
              token:
                type: string
        default:
          description: Error
          schema:
            $ref: "#/definitions/MessageResponse"
  /user:
    x-swagger-router-controller: user
    post:
      description: Create a new user
      operationId: createUser
      parameters:
        - name: data
          in: body
          description: New user body
          required: true
          schema:
            type: object
            required:
              - email
              - password
            properties:
              email:
                type: string
              password:
                type: string
      responses:
        201:
          description: Success
          schema:
            type: object
            required:
              - email
            properties:
              email:
                type: string
        default:
          description: Error
          schema:
            $ref: "#/definitions/MessageResponse"
  /task:
    post:
      description: Create a new task
      operationId: createTask
      parameters:
        - name: data
          in: body
          description: New task body
          required: true
          schema:
            $ref: "#/definitions/TaskObject"
      responses:
        201:
          description: Success
          schema:
            $ref: "#/definitions/TaskObject"
        default:
          description: Error
          schema:
            $ref: "#/definitions/MessageResponse"

# complex objects have schema definitions
definitions:
  HelloWorldResponse:
    required:
      - message
    properties:
      message:
        type: string
  MessageResponse:
    type: object
    required:
      - message
    properties:
      message:
        type: string
  TaskObject:
    type: object
    required:
      - title
      - description
      - deadline
    properties:
      title:
        type: string
      description:
        type: string
      deadline:
        type: string
        format: date-time
