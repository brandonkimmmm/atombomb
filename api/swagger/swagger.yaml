swagger: "2.0"
info:
  version: "0.0.1"
  title: Hello World App
# during dev, should point to your local machine
host: localhost:10010
# basePath prefixes all resource paths
basePath: /

schemes:
  # tip: remove http to make production-grade
  - http
  - https
# format of bodies a client can send (Content-Type)
consumes:
  - application/json
# format of the responses to the client (Accepts)
produces:
  - application/json
  - text/html

securityDefinitions:
  Bearer:
    description: JWT authentication
    type: apiKey
    name: Authorization
    in: header

paths:
  /health:
    x-swagger-router-controller: general
    get:
      description: Get health of server
      operationId: getHealth
      responses:
        200:
          description: Success
          schema:
            type: object
        default:
          description: Error
          schema:
            $ref: "#/definitions/MessageResponse"
  /swagger:
    x-swagger-pipe: swagger_raw
  /login:
    x-swagger-router-controller: user
    post:
      description: User login
      operationId: loginUser
      parameters:
        - name: data
          in: body
          description: Login credentials
          required: true
          schema:
            type: object
            required:
              - email
              - password
            properties:
              email:
                type: string
              password:
                type: string
      responses:
        200:
          description: Success
          schema:
            type: object
            required:
              - token
            properties:
              token:
                type: string
        default:
          description: Error
          schema:
            $ref: "#/definitions/MessageResponse"
  /signup:
    x-swagger-router-controller: user
    post:
      description: Create a new user
      operationId: createUser
      parameters:
        - name: data
          in: body
          description: New user body
          required: true
          schema:
            type: object
            required:
              - email
              - password
            properties:
              email:
                type: string
              password:
                type: string
      responses:
        201:
          description: Success
          schema:
            type: object
            required:
              - email
            properties:
              email:
                type: string
        default:
          description: Error
          schema:
            $ref: "#/definitions/MessageResponse"
  /task:
    x-swagger-router-controller: task
    get:
      operationId: getTask
      parameters:
        - name: id
          in: query
          required: true
          type: number
          format: int32
      responses:
        200:
          description: Success
          schema:
            $ref: "#/definitions/TaskObject"
        default:
          description: Error
          schema:
            $ref: "#/definitions/MessageResponse"
      security:
        - Bearer: []
    post:
      description: Create a new task
      operationId: postTask
      parameters:
        - name: data
          in: body
          description: New task body
          required: true
          schema:
            $ref: "#/definitions/TaskObject"
      responses:
        201:
          description: Success
          schema:
            $ref: "#/definitions/TaskObject"
        default:
          description: Error
          schema:
            $ref: "#/definitions/MessageResponse"
      security:
        - Bearer: []
    delete:
      description: Delete a task
      operationId: deleteTask
      parameters:
        - name: id
          in: query
          required: true
          type: number
          format: int32
      responses:
        200:
          description: Success
          schema:
            $ref: "#/definitions/MessageResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/MessageResponse"
      security:
        - Bearer: []
  /task/bomb:
    x-swagger-router-controller: task
    post:
      description: Add new for task
      operationId: postTaskBomb
      parameters:
        - name: id
          in: query
          required: true
          type: number
          format: int32
        - name: data
          in: body
          required: true
          schema:
            $ref: "#/definitions/BombObject"
      responses:
        200:
          description: Success
          schema:
            $ref: "#/definitions/TaskObject"
        default:
          description: Error
          schema:
            $ref: "#/definitions/MessageResponse"
      security:
        - Bearer: []
  /tasks:
    x-swagger-router-controller: task
    get:
      description: Get all tasks
      operationId: getAllTasks
      responses:
        200:
          description: Success
          schema:
            $ref: "#/definitions/TasksObject"
        default:
          description: Error
          schema:
            $ref: "#/definitions/MessageResponse"
      security:
        - Bearer: []
  /task/update-deadline:
    x-swagger-router-controller: task
    put:
      description: Update a task deadline
      operationId: updateTaskDeadline
      parameters:
        - name: data
          in: body
          required: true
          schema:
            type: object
            required:
              - id
              - deadline
            properties:
              id:
                type: number
                format: int32
              deadline:
                type: string
                format: date-time
      responses:
        200:
          description: Success
          schema:
            $ref: "#/definitions/TaskObject"
        default:
          description: Error
          schema:
            $ref: "#/definitions/MessageResponse"
      security:
        - Bearer: []
  /twitter/connect:
    x-swagger-router-controller: twitter
    get:
      description: Connect your twitter account
      operationId: getRequestToken
      responses:
        302:
          description: 302 response
          schema:
            type: string
        default:
          description: Error
          schema:
            $ref: "#/definitions/MessageResponse"
      security:
        - Bearer: []
  /twitter/callback:
    x-swagger-router-controller: twitter
    get:
      description: Get access token
      operationId: getAccessToken
      parameters:
        - name: oauth_token
          in: query
          type: string
          required: true
        - name: oauth_verifier
          in: query
          type: string
          required: true
      responses:
        302:
          description: 302 response
          schema:
            type: string
        default:
          description: Error
          schema:
            $ref: "#/definitions/MessageResponse"

# complex objects have schema definitions
definitions:
  HelloWorldResponse:
    required:
      - message
    properties:
      message:
        type: string
  MessageResponse:
    type: object
    required:
      - message
    properties:
      message:
        type: string
  TasksObject:
    type: object
    required:
      - count
      - data
    properties:
      count:
        type: number
        format: int32
      data:
        type: array
        items:
          $ref: "#/definitions/TaskObject"
  TaskObject:
    type: object
    required:
      - title
      - description
      - deadline
    properties:
      title:
        type: string
      description:
        type: string
      deadline:
        type: string
        format: date-time
  BombObject:
    type: object
    required:
      - method
      - post
    properties:
      method:
        type: string
      post:
        type: string
